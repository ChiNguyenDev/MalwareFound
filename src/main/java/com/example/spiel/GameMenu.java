package com.example.spiel;

import javafx.animation.FadeTransition;
import javafx.application.Platform;
import javafx.geometry.Pos;
import javafx.scene.control.Button;
import javafx.scene.layout.VBox;
import javafx.scene.layout.Pane;
import javafx.stage.Screen;
import javafx.stage.Stage;
import javafx.util.Duration;

public class GameMenu {
    private Pane root;
    private GameManager gameManager;
    private GameStats gameStats;
    private Stage stage;
    private GameSounds gameSounds;
    private StartMenu startMenu;

    public GameMenu(GameManager gameManager, GameStats gameStats, Stage stage, GameSounds gameSounds, StartMenu startmenu) {
        this.gameManager = gameManager;
        this.gameStats = gameStats;
        this.stage = stage;
        this.gameSounds = gameSounds;
        this.startMenu = startmenu;

        root = new Pane();
        root.setStyle("-fx-background-color: rgba(0, 0, 0, 0.7);"); // Semi-transparent background

        // Erstellt Menü-Buttons
        Button newGameButton = new Button("Neues Spiel");
        Button startMenuButton = new Button("Hauptmenü");
        Button resumeGameButton = new Button("Zurück");
        Button quitButton = new Button("Spiel beenden");

        newGameButton.getStyleClass().add("btn");
        resumeGameButton.getStyleClass().add("btn");
        quitButton.getStyleClass().add("btn");
        startMenuButton.getStyleClass().add("btn");

        newGameButton.setOnAction(event -> startNewGame());
        resumeGameButton.setOnAction(event -> resumeGame());
        quitButton.setOnAction(event -> Platform.exit());
        startMenuButton.setOnAction(event -> backToStartMenu());

        VBox menuButtons = new VBox(30);
        menuButtons.setAlignment(Pos.CENTER);
        menuButtons.getChildren().addAll(newGameButton, startMenuButton, resumeGameButton, quitButton);

        double screenWidth = Screen.getPrimary().getBounds().getWidth();
        double screenHeight = Screen.getPrimary().getBounds().getHeight();
        double menuWidth = menuButtons.getBoundsInLocal().getWidth();
        double menuHeight = menuButtons.getBoundsInLocal().getHeight();
        double menuX = ((screenWidth - menuWidth) / 2) - 200;
        double menuY = ((screenHeight - menuHeight) / 2) - 200;
        menuButtons.setLayoutX(menuX);
        menuButtons.setLayoutY(menuY);

        root.setMinSize(screenWidth, screenHeight);

        root.getChildren().add(menuButtons);

        root.setVisible(false);
        root.setPickOnBounds(false);
    }

    Pane getMenuPane() {
        return root;
    }

    //Zeigt das Menue
    void showMenu() {
        root.setVisible(true);
        gameManager.stopTimer();
    }

    //Schliesst das Menue
    void hideMenu() {
        root.setVisible(false);
        gameManager.startTimer();
    }

    //Startet ein neues Spiel
    private void startNewGame() {
        gameStats.resetGame();
        gameStats.setPaused(false);
        hideMenu();
    }

    //Geht zurueck zum vorherigen Spielstand
    void resumeGame() {
        hideMenu();
        gameSounds.resumeMusic();
        gameStats.setPaused(false);
    }

    //Geht zurueck in das Startmenue
    void backToStartMenu() {
        FadeTransition fadeOut = new FadeTransition(Duration.millis(500), root);
        fadeOut.setFromValue(1.0);
        fadeOut.setToValue(0.0);
        fadeOut.setOnFinished(event -> {
            startMenu.startMenu();
        });

        fadeOut.play();
    }
}
