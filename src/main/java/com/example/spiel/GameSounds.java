package com.example.spiel;

import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;

import java.net.MalformedURLException;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Random;

/**
 * The type Game sounds.
 */
//Diese Klasse kümmert sich um die Sounds und Musik
public class GameSounds {
    /**
     * The Back ground player.
     */
    private MediaPlayer backGroundPlayer;
    /**
     * The Start music player.
     */
    private MediaPlayer startMusicPlayer;

    /**
     * The constant DEATH_SOUND_PATH.
     */
//Soundpfade
    public static final String DEATH_SOUND_PATH = "src/main/resources/Sounds/deathsound.mp3";
    /**
     * The constant START_MUSIC_PATH.
     */
    public static final String START_MUSIC_PATH = "src/main/resources/Sounds/startmusic.mp3";
    /**
     * The constant HOVER_SOUND_PATH.
     */
    public static final String HOVER_SOUND_PATH = "src/main/resources/Sounds/hoversound.mp3";
    /**
     * The constant SELECTED_SOUND_PATH.
     */
    public static final String SELECTED_SOUND_PATH = "src/main/resources/Sounds/selected.wav";
    /**
     * The constant HIGHSCORE_SOUND_PATH.
     */
    public static final String HIGHSCORE_SOUND_PATH = "src/main/resources/Sounds/highscoresound.mp3";

    /**
     * Play random song.
     */
//Spielt einen zufälligen Song ab
    void playRandomSong() {
        String song = getRandomSong();
        Media media = new Media(Paths.get(song).toUri().toString());
        backGroundPlayer = new MediaPlayer(media);
        backGroundPlayer.setVolume(0.8);
        backGroundPlayer.play();
    }

    /**
     * Gets random song.
     *
     * @return the random song
     */
//Gibt einen zufälligen Songnamen zurück
    private String getRandomSong() {
        ArrayList<String> playList = new ArrayList<>();
        String path = "src/main/resources/Sounds/";

        int numberOfSongs = 3; //Anzahl der Lieder
        for (int i = 1; i <= numberOfSongs; i++) {
            playList.add(path + "song" + i + ".mp3");
        }

        Random rand = new Random();
        return playList.get(rand.nextInt(numberOfSongs));
    }

    /**
     * Stop music.
     */
//Stoppt die Spielhintergrundmusik
    void stopMusic() {
        if (backGroundPlayer != null) {
            backGroundPlayer.stop();
        }
    }

    /**
     * Pause music.
     */
//Pausiert die Spielhintergrundmusik
    void pauseMusic() {
        backGroundPlayer.pause();
    }

    /**
     * Resume music.
     */
//Setzt die Spielhintergrundmusik fort
    void resumeMusic() {
        backGroundPlayer.play();
    }

    /**
     * Play death sound.
     */
//Spielt den Todessound ab
    void playDeathSound() {
        MediaPlayer deathSoundPlayer = new MediaPlayer(new Media(Paths.get(DEATH_SOUND_PATH).toUri().toString()));
        deathSoundPlayer.setVolume(1.5);
        deathSoundPlayer.play();
    }

    /**
     * Play start music.
     */
//Spielt die Startmenü-Musik ab
    public void playStartMusic() throws MalformedURLException {
        startMusicPlayer = new MediaPlayer(new Media(Paths.get(START_MUSIC_PATH).toUri().toURL().toString()));

        startMusicPlayer.setVolume(0.8);
        startMusicPlayer.setAutoPlay(true);
        startMusicPlayer.setCycleCount(MediaPlayer.INDEFINITE);
        startMusicPlayer.play();
    }

    /**
     * Stop start music.
     */
//Stoppt die Startmenü-Musik
    public void stopStartMusic() {
        startMusicPlayer.stop();
    }

    /**
     * Play hover sound.
     */
//Spielt den Hover-Sound über den Buttons ab
    public void playHoverSound() {
        MediaPlayer hoverSoundPlayer = new MediaPlayer(new Media(Paths.get(HOVER_SOUND_PATH).toUri().toString()));
        hoverSoundPlayer.setVolume(1);
        hoverSoundPlayer.play();
    }

    /**
     * Play selected sound.
     */
//Spielt den Sound ab, der beim Drücken eines Knopfes kommt.
    public void playSelectedSound() {
        MediaPlayer selectedSoundPlayer = new MediaPlayer(new Media(Paths.get(SELECTED_SOUND_PATH).toUri().toString()));
        selectedSoundPlayer.play();
    }

    /**
     * Play high score sound.
     */
//Spielt den Highscore-Sound ab
    void playHighScoreSound() {
        MediaPlayer selectedSoundPlayer = new MediaPlayer(new Media(Paths.get(HIGHSCORE_SOUND_PATH).toUri().toString()));
        selectedSoundPlayer.play();
    }
}