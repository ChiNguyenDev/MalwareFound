package com.example.spiel;

import javafx.geometry.Rectangle2D;
import javafx.scene.Cursor;
import javafx.scene.ImageCursor;
import javafx.scene.Scene;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.Pane;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javafx.scene.media.MediaView;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.scene.text.Text;
import javafx.stage.Screen;

import java.io.File;
import java.util.List;

// Diese Klasse verwaltet die Benutzeroberflaeche des Spieloverlays.
public class OverlayUI {
    private Text gameOverText;
    private Text restartText;
    private Text scoreText;
    private Text levelText;
    private Pane backgroundRoot;

    public OverlayUI(Pane root, Pane backgroundRoot) {
        // Initialisiere die Textelemente in der Spielschicht
        this.backgroundRoot = backgroundRoot;
        setText(root);
    }

    public void addBackground(Pane backgroundRoot) {
        // Hintergrundvideo laden
        Screen primaryScreen = Screen.getPrimary();
        Rectangle2D screenBounds = primaryScreen.getVisualBounds();
        String videoFile = "src/main/resources/Background/background1.mp4";
        Media background = new Media(new File(videoFile).toURI().toString());
        MediaPlayer mediaPlayer = new MediaPlayer(background);
        MediaView mediaView = new MediaView(mediaPlayer);

        // Das Video zur Hintergrundschicht hinzufuegen
        backgroundRoot.getChildren().add(mediaView);
        mediaPlayer.setAutoPlay(true);
        mediaPlayer.setCycleCount(MediaPlayer.INDEFINITE);
        mediaView.setFitWidth(screenBounds.getWidth() + 25);
        mediaView.setFitHeight(screenBounds.getHeight() + 60);
        mediaView.toBack();
    }

    public void addStartBackground() {
        // Hintergrundvideo laden
        Screen primaryScreen = Screen.getPrimary();
        Rectangle2D screenBounds = primaryScreen.getVisualBounds();
        String videoFile = "src/main/resources/Background/startbackground.mov";
        Media background = new Media(new File(videoFile).toURI().toString());
        MediaPlayer mediaPlayer = new MediaPlayer(background);
        MediaView mediaView = new MediaView(mediaPlayer);

        // Das Video zur Hintergrundschicht hinzufuegen
        backgroundRoot.getChildren().add(mediaView);
        mediaPlayer.setAutoPlay(true);
        mediaPlayer.setCycleCount(MediaPlayer.INDEFINITE);
        mediaView.setFitWidth(screenBounds.getWidth() + 25);
        mediaView.setFitHeight(screenBounds.getHeight() + 60);
        mediaView.toBack();
    }

    //Initialisiert alle Textelemente
    public void setText(Pane root) {
        // "Game Over"-Text
        gameOverText = new Text(200, 480, "Der Virus ist in deinen PC eingedrungen");
        setGameTextCharacteristics(gameOverText, 70, false, root);

        // Neustartanweisungen
        restartText = new Text(400, 520, "'R' Drücken um ein neues Spiel anzufangen");
        setGameTextCharacteristics(restartText, 40, false, root);

        // Punktestand-Anzeige
        scoreText = new Text(10, 120, "Score: 0");
        setGameTextCharacteristics(scoreText, 40, true, root);

        // Level-Anzeige
        levelText = new Text(10, 80, "Level 1");
        setGameTextCharacteristics(levelText, 40, true, root);

        HighScoreManager highScoreManager = new HighScoreManager();
        Text highScoreText = new Text(10, 40, "Highscore: " + highScoreManager.getHighestScore());
        setGameTextCharacteristics(highScoreText, 40, true, root);
    }

    // Gemeinsame Eigenschaften der Texte im Spieloverlay
    void setGameTextCharacteristics(Text text, int fontSize, boolean visible, Pane root) {
        text.setVisible(visible);
        text.setFont(Font.font("Impact", FontWeight.BOLD, fontSize));
        text.setFill(Color.WHITE);
        root.getChildren().add(text);
    }

    void createCursorView(Scene scene) {
        Cursor cursor = new ImageCursor(new Image("file:src/main/resources/Assets/cursor.png"));
        scene.setCursor(cursor);
    }

    //Erstellt den Inhalt des "Hilfe" Tabs im Startmenue
    void createHelpContent(StartSubScene helpSubScene) {
        ImageView controlView = new ImageView(new Image("file:src/main/resources/Otherstuff/Steuerung.png"));

        controlView.setLayoutX(100);
        controlView.setLayoutY(30);
        controlView.setFitWidth(648);
        controlView.setFitHeight(364.8);

        helpSubScene.getSubSceneRoot().getChildren().add(controlView);

        Text helpText = new Text(
                """
                        Malware found! ist ein Arcade-Spiel, bei dem du die Rolle eines\s
                        Verteidigers für die Firewall übernimmst und deinen Computer\s
                        vor gefährlichen Viren schützen musst. Das Hauptziel des Spiels\s
                        besteht darin, den Mega Virus Boss zu besiegen, so lange wie\s
                        möglich zu überleben und eine möglichst hohe Punktzahl zu\s
                        erreichen. Du erhältst Punkte für das Zerstören von Viren und\s
                        kann durch das Sammeln von Power-Ups deine Schussgeschwindigkeit\s
                        und deine Bewegungsgeschwindigkeit erhöht.""");

        setStartTextCharacteristics(helpText, 20, 20, 390);
        helpSubScene.getSubSceneRoot().getChildren().add(helpText);
    }

    //Erstellt den Inhalt des "Score" Tabs im Startmenue
    void createScoreContent(StartSubScene scoreSubScene) {
        HighScoreManager highScoreManager = new HighScoreManager();

        List<Integer> highScores = highScoreManager.loadHighScores();

        StringBuilder highScoresBuilder = new StringBuilder("High Scores:\n");

        for (int i = 0; i < highScores.size(); i++) {
            highScoresBuilder.append((i + 1)).append(". ").append(highScores.get(i)).append("\n");
        }

        Text highScoresText = new Text();
        highScoresText.setText(highScoresBuilder.toString());
        setStartTextCharacteristics(highScoresText, 30, 20, 110);

        scoreSubScene.getSubSceneRoot().getChildren().add(highScoresText);
    }

    //Erstellt den Inhalt des "Credit" Tabs im Startmenü
    void createCreditContent(StartSubScene creditsSubScene) {
        Text creditText = new Text("Dieses Spiel wurde erstellt von Chi Cuong Nguyen");
        setStartTextCharacteristics(creditText, 20, 20, 110);
        creditsSubScene.getSubSceneRoot().getChildren().add(creditText);
    }

    //Bestimmt die Standardschrifteigenschaften und die Position
    void setStartTextCharacteristics(Text text, int fontSize, int positionx, int positiony) {
        text.setLayoutX(positionx);
        text.setLayoutY(positiony);
        Font customFont = Font.loadFont(getClass().getResourceAsStream("/Font/ocra.ttf"), fontSize);
        text.setFont(customFont);
        text.setFill(Color.LIME);
        text.setVisible(true);
    }

    // Setzt den Punktestand in der Benutzeroberflaeche.
    public void setScore(int score) {
        scoreText.setText("Score: " + score);
    }

    // Setzt das aktuelle Level in der Benutzeroberflaeche.
    public void setLevel(int level) {
        levelText.setText("Level " + level);
    }

    // Zeigt oder versteckt den "Game Over"-Text.
    public void showGameOverText(boolean show) {
        gameOverText.setVisible(show);
    }

    // Zeigt oder versteckt den Neustart-Text.
    public void showRestartText(boolean show) {
        restartText.setVisible(show);
    }

    // PrÃ¼ft, ob der "Game Over"-Text sichtbar ist.
    public boolean isGameOverTextVisible() {
        return gameOverText.isVisible();
    }

}