package com.example.spiel;

import javafx.scene.layout.Pane;

/**
 * The type Game stats.
 */
//Diese Klasse enthält Spielwerte und kümmert sich um das resetten des Spiels
public class GameStats {
    /**
     * The constant INITIAL_PLAYER_X.
     */
    private static final int INITIAL_PLAYER_X = 200;
    /**
     * The constant INITIAL_PLAYER_Y.
     */
    private static final int INITIAL_PLAYER_Y = 200;
    /**
     * The constant INITIAL_BOSS_HP.
     */
    private static final int INITIAL_BOSS_HP = 60;
    /**
     * The constant INITIAL_ATTACKSPEED.
     */
    private static final double INITIAL_ATTACKSPEED = 1.0;
    /**
     * The constant INITIAL_STEP.
     */
    private static final double INITIAL_STEP = 4.5;

    /**
     * The Score.
     */
    private int score = 0;
    /**
     * The Attack speed.
     */
    private double attackSpeed = INITIAL_ATTACKSPEED;
    /**
     * The Step.
     */
    private double step = INITIAL_STEP;
    /**
     * The Boss hp.
     */
    private int bossHP = INITIAL_BOSS_HP;
    /**
     * The End boss spawned.
     */
    private boolean endBossSpawned;
    /**
     * The End boss killed.
     */
    private boolean endBossKilled;
    /**
     * The Game manager.
     */
    private GameManager gameManager;
    /**
     * The Overlay ui.
     */
    private OverlayUI overlayUI;
    /**
     * The Game sounds.
     */
    private GameSounds gameSounds;
    /**
     * The Root.
     */
    private Pane root;
    /**
     * The Entity ui.
     */
    private EntityUI entityUI;
    /**
     * The Death state.
     */
    private boolean deathState;
    /**
     * The Paused.
     */
    private boolean paused;

    /**
     * Instantiates a new Game stats.
     *
     * @param entityUI   the entity ui
     * @param overlayUI  the overlay ui
     * @param gameSounds the game sounds
     * @param root       the root
     */
    public GameStats(EntityUI entityUI, OverlayUI overlayUI, GameSounds gameSounds, Pane root) {
        this.entityUI = entityUI;
        this.overlayUI = overlayUI;
        this.gameSounds = gameSounds;
        this.root = root;
    }

    /**
     * Sets game loop.
     *
     * @param gameManager the game manager
     */
//Spiellogik-Objekt wird eingebunden
    void setGameLoop(GameManager gameManager) {
        this.gameManager = gameManager;
    }

    /**
     * Reset game.
     */
// Methode zum Zurücksetzen aller Spielwerte
    void resetGame() {
        root.getChildren().clear(); // Löschen aller Objekte im Spielbereich
        deathState = false;
        entityUI.getPlayerView().setX(INITIAL_PLAYER_X);
        entityUI.getPlayerView().setY(INITIAL_PLAYER_Y);
        score = 0;
        attackSpeed = INITIAL_ATTACKSPEED;
        setStep(INITIAL_STEP);
        setBossHP(INITIAL_BOSS_HP);
        overlayUI.setText(root);
        entityUI.getAttackList().clear();
        entityUI.getBuffList().clear();
        entityUI.getEnemies().clear();
        setEndBossSpawned(false);
        setEndBossKilled(false);
        root.getChildren().add(entityUI.getPlayerView()); // Spielerobjekt zum Spielbereich hinzufügen
        gameManager.startTimer(); // Timer Starten
        gameSounds.playRandomSong(); // Zufälligen Hintergrundsong abspielen
    }

    /**
     * Level int.
     *
     * @return the int
     */
//Gibt das Level wieder
    int level() {
        if (score <= 100) {
            return 1; //Level 1 bei 0-100
        } else if (score <= 450) {
            return 2; //Level 2 bei 101-450
        } else if (score <= 900) {
            return 3; //Level 3 bei 451-900
        } else if (score <= 1500) {
            return 4; //Level 4 bei 901-1500
        } else {
            return 5; //Level 5 ab 1501
        }
    }

    /**
     * Gets score.
     *
     * @return the score
     */
    public int getScore() {
        return score;
    }

    /**
     * Sets score.
     *
     * @param score the score
     */
    public void setScore(int score) {
        this.score = score;
    }

    /**
     * Gets attack speed.
     *
     * @return the attack speed
     */
    public double getAttackSpeed() {
        return attackSpeed;
    }

    /**
     * Sets attack speed.
     *
     * @param bulletSpeed the bullet speed
     */
    public void setAttackSpeed(double bulletSpeed) {
        this.attackSpeed = bulletSpeed;
    }

    /**
     * Gets step.
     *
     * @return the step
     */
    public double getStep() {
        return step;
    }

    /**
     * Sets step.
     *
     * @param step the step
     */
    public void setStep(double step) {
        this.step = step;
    }

    /**
     * Gets boss hp.
     *
     * @return the boss hp
     */
    public int getBossHP() {
        return bossHP;
    }

    /**
     * Sets boss hp.
     *
     * @param bossHP the boss hp
     */
    public void setBossHP(int bossHP) {
        this.bossHP = bossHP;
    }

    /**
     * Decrease hit points.
     *
     * @param damage the damage
     */
    public void decreaseHitPoints(int damage) {
        bossHP -= damage;
    }

    /**
     * Gets end boss spawned.
     *
     * @return the end boss spawned
     */
    public boolean getEndBossSpawned() {
        return endBossSpawned;
    }

    /**
     * Sets end boss spawned.
     *
     * @param bool the bool
     */
    public void setEndBossSpawned(boolean bool) {
        endBossSpawned = bool;
    }

    /**
     * Gets end boss killed.
     *
     * @return the end boss killed
     */
    public boolean getEndBossKilled() {
        return endBossKilled;
    }

    /**
     * Sets end boss killed.
     *
     * @param bool the bool
     */
    public void setEndBossKilled(boolean bool) {
        endBossKilled = bool;
    }

    /**
     * Sets death state.
     *
     * @param state the state
     */
    public void setDeathState(boolean state) {
        deathState = state;
    }

    /**
     * Gets death state.
     *
     * @return the death state
     */
    public boolean getDeathState() {
        return deathState;
    }

    /**
     * Sets paused.
     *
     * @param paused the paused
     */
    public void setPaused(boolean paused) {
        this.paused = paused;
    }

    /**
     * Gets paused.
     *
     * @return the paused
     */
    public boolean getPaused() {
        return paused;
    }
}
